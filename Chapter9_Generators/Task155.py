#!/usr/bin/python3

'''
You are working on a culinary version of artificial intelligence that creates a new flavor.
The algorithm combines 3 flavors: sweet, sour, salty. You need to prepare a function that
will randomize the proportions of the flavors.  In our case KSI (culinary artificial intelligence)
will make 10 attempts to mix the flavors. Therefore, you need to draw 10 times 3 numbers from 1 - 100,
but the numbers should add up to 100.
If you need more detailed instructions, here they are:
Import the random module
Define a random_with_sum generator that:
Accepts arguments:
number_of_values - number of values to draw (in our case 3)
asserted_sum - the assumed sum to which the drawn numbers should add up
Initialize the variables:
trial - to zero - it will be a counter of attempts to draw values before we manage to draw numbers
that add up to asserted_sum (in our case 100)
numbers - an array counting the number_of_values values (in our case 3)
In the infinite while loop
increase the trial by 1
for number and from 0 to number_of_values draw numbers from the range 1-100 and write them in the array numbers
if the drawn numbers add up to asserted_sum, then
return tuple (trial, numbers) - use the yield function
clear the trial variable
In your program:
in a for loop executed 10 times
write to tuple (number_of_trials, numbers) another value generated by random_with_sum(3, 100)
display this value
'''

import random


def random_with_sum(number_of_values, asserted_sum):
    trial = 0
    numbers = list(range(number_of_values))
    while True:

        trial += 1
        for i in range(number_of_values):
            numbers[i] = random.randint(1, 101)

        if sum(numbers) == asserted_sum:
            yield ((trial, numbers))
            trial = 0


for i in range(10):
    (number_of_trials, numbers) = next(random_with_sum(3, 100))
    print(number_of_trials, numbers)
#!/usr/bin/python3

'''In this assignment, you will need to convert the lists from the previous LAB into generator form.
It will be somewhat problematic to figure out how many values are generated by the generator,
because in order to do so... you have to go through it!

On the scam with the deposit machine from the previous task, you decide with your boss to open the airline "Flying Python". The airline will be domestic. Here is the list of airports:
ports = ['WAW', 'KRK', 'GDN', 'KTW', 'WMI', 'WRO', 'POZ', 'RZE', 'SZZ',
         'LUZ', 'BZG', 'LCJ', 'SZY', 'IEG', 'RDO']
1 Build a tuple generator to symbolize the start and end ports. Make an each-to-any connection
2. eliminate the port-to-port connection from the above generator
Since the connection from A to B is duplicated with the connection from B to A
 - generate possible domestic connections omitting such duplicated routes.

4. count the number of generated connections in steps 1,2,3. for this purpose write
a for loop which: displays the generated values and counts them'''

ports = ['WAW', 'KRK', 'GDN', 'KTW', 'WMI', 'WRO', 'POZ', 'RZE', 'SZZ',
         'LUZ', 'BZG', 'LCJ', 'SZY', 'IEG', 'RDO']
print("Case 1")
routes = ((start, stop) for start in ports for stop in ports)

counter = 0
for (start, stop) in routes:
    print("{} - {}".format(start, stop))
    counter += 1

print(counter)


print('')
print("Case 2")
routes = ((start, stop) for start in ports for stop in ports if start != stop)

counter = 0
for (start, stop) in routes:
    print("{} - {}".format(start, stop))
    counter += 1

print(counter)

print('')
print("Case 3")

routes = ((start, stop) for start in ports for stop in ports if start < stop)

counter = 0
for (start, stop) in routes:
    print("{} - {}".format(start, stop))
    counter += 1

print(counter)